#!/usr/bin/env python
#######################################
#                                     #
# ##### ##### #   # ##    ##### ##### #
# #     #   #  # #  # #   #     #   # #
# ##### #####   #   #  #  ###   ##### #
#     # #       #   #   # #     #  #  #
# ##### #       #   ##### ##### #   # #
#                                     #
#######################################
# v0.1.1                              #
#######################################
import urllib,re,os,urllib2,sys

def save(fl):
	while True:
		if fl=="":
			print "File name not valid."
			fl=raw_input("Retype: ")
		else:
			if (not os.path.isfile(fl)):
				while True:
					mkfl=raw_input("Make file with all email? [y or n]: ")
					if mkfl=="y" or mkfl=="yes":
						print "Load..."
						opfl=open(fl,"w")
						opfl.write(allmail)
						opfl.close()
						print "Completed."
						sys.exit()
					elif mkfl=="n" or mkfl=="no":
						sys.exit()
			else:
				while True:
					print "This file already exist,"
					print "do you want:"
					print "1.Over write"
					print "2.Add"
					option=raw_input()
					if option=="1":
						print "Over write,"
						print "the content of",fl,"will be deleted."
						print "Load..."
						opfl=open(fl,"w")
						opfl.write(allmail)
						opfl.close()
						print "Completed."
						sys.exit()
					elif option=="2":
						print "Add,"
						print "At the content of",fl,"will be add all email."
						print "Load..."
						opfl=open(fl,"r")
						ctf=opfl.read()
						opfl.close()
						opfl=open(fl,"w")
						opfl.write(ctf)
						opfl.write(allmail)
						opfl.close()
						print "Completed."
						sys.exit()

class bcolors:
	HEADER = '\033[95m'
	OKBLUE = '\033[94m'
	OKGREEN = '\033[92m'
	WARNING = '\033[93m'
	FAIL = '\033[91m'
	ENDC = '\033[0m'
	BOLD = '\033[1m'
	UNDERLINE = '\033[4m'

link=raw_input("Url: ")
print "Verifing..."
try:
	urllib2.urlopen(link)
	print bcolors.OKGREEN+bcolors.BOLD+"Ok"+bcolors.ENDC
	##future feature	
	while True:
		fwl=raw_input("Follow link? [y or n]: ")
		if fwl=="y" or fwl=="yes":
			print "Follow."
			break
		elif fwl=="n" or fwl=="no":
			print "No follow."
			break
	print "--------"
	site=urllib.urlopen(link)
	page=site.read()
	page=page.replace("\n","").replace("\r","").replace("    ","").replace(" ","\n").replace("<","\n").replace(">","\n")
	body=re.findall(r'<body>(.*?)</body>',page)
	allmail=''
	mailnum=0
	hf=''
	#if "@" in body: don't work
	if "@" in page:
		for line in page.splitlines():
			if "@" in line:
				if "." in line:
					print bcolors.BOLD+bcolors.OKGREEN+"*"+bcolors.ENDC,line
					if allmail=="":
						allmail=line
						mailnum=1
					else:
						allmail=allmail+"\n"+line
						mailnum+=1
				else:
					print bcolors.BOLD+bcolors.FAIL+"*"+bcolors.ENDC,line
			elif "href=" in line:
				##future feature
				if fwl=="y" or fwl=="yes":
					if '"' in line:
						lt=re.findall(r'(".*?")',line)
						try:
							hf=lt[0].replace('"','')
						except:
							print "Error"
					elif "'" in line:
						lt=re.findall(r"('.*?')",line)
						try:
							hf=hf+lt[0].replace("'","")+"\n"
						except:
							hflog+=e.code
		print "--------"
		print mailnum,"valid e-mail."
		print "--------"
		##future feature
		print hf
		print "--------"
		if allmail!='':
			answer=raw_input("Save in a file? [y or n]: ")
			if answer=="y" or answer=="yes":
				fl=raw_input("Where to save?: ")
				save(fl)
			elif answer=="n" or answer=="no":
				print "No save."
				sys.exit()
			else:
				while True:
					answer=raw_input("Save in a file? [y or n]: ")
					if answer=="y" or answer=="yes":
						fl=raw_input("Where to save?: ")
						save(fl)
					elif answer=="n" or answer=="no":
						print "No save."
						sys.exit()
	else:
		print "No mail."
		if "href=" in page:
			if fwl=="y" or fwl=="yes":
				for line in page.splitlines():
					if '"' in line:
						lt=re.findall(r'(".*?")',line)
						try:
							hf=lt[0].replace('"','')
						except:
							print "Error"
					elif "'" in line:
						lt=re.findall(r"('.*?')",line)
						try:
							hf=hf+lt[0].replace("'","")+"\n"
						except:
							hflog+=e.code
except urllib2.HTTPError, e:
	print bcolors.FAIL+bcolors.BOLD+"Error:"+bcolors.ENDC
	if e.code==404:
		print "404 page not found"
	else:
		print(e.code)
except urllib2.URLError, e:
	print bcolors.FAIL+bcolors.BOLD+"Error:"+bcolors.ENDC
	print(e.args)
